@page "/characters/live"

@implements IDisposable

@code {
    public const string Url = "/characters/live";
    public static string GetRedirectUrl() => Url;
}

<PageTitle>Online Charaktere Ãœbersicht</PageTitle>

<CharacterOverviewDataGrid @ref="_characterOverviewDataGrid" OnlyLive="true" Label="Online Charaktere"/>

@code {
    [CascadingParameter] public UserAccessService UserAccessService { get; set; }

    private bool _isAuthorized;
    private bool _shouldRedirect;

    private CharacterOverviewDataGrid _characterOverviewDataGrid;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _isAuthorized = UserAccessService.HasRight(PageRightRegistry.GetNeededRankForPage(Url));
        _shouldRedirect = !_isAuthorized;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        if (_shouldRedirect)
        {
            Navigation.NavigateToNotAuthorized();
            return;
        }

        await _characterOverviewDataGrid.Load();
        
        ReloadService.OnCustomReload += Reload;
    }
    
    public void Dispose()
    {
        ReloadService.OnCustomReload -= Reload;
    }

    private async Task Reload()
    {
        await _characterOverviewDataGrid.Load();
    }
}