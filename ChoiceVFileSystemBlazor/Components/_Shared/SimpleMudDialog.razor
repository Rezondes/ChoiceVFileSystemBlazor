@namespace ChoiceVFileSystemBlazor.Components._Shared

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @MudDialog.Title   
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (!string.IsNullOrEmpty(Description))
        {
            <MudText Typo="Typo.body1">
                @Description
            </MudText>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />
        }
        @if (Inputs is not null) foreach (var input in Inputs)
        {
            switch (input.Type)
            {
                case InputTypes.Text:
                    <MudTextField Variant="Variant.Outlined" @bind-Value="@input.Value" Label="@input.Label" Placeholder="@input.Placeholder" Lines="@input.Lines" AutoGrow MaxLines="@(input.Lines >= 5 ? 10 : 5)" Clearable="false" />
                    break;
                case InputTypes.Number:
                    <MudNumericField Variant="Variant.Outlined" @bind-Value="@input.Value" Label="@input.Label" Placeholder="@input.Placeholder" Min="input.Min" Max="input.Max" Clearable="false" />
                    break;
                case InputTypes.Select:
                    <MudSelect T="string" @bind-Value="@input.Value" Label="@input.Label" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Clearable="false">
                        @foreach (var option in input.Options)
                        {
                            <MudSelectItem T="string" Value="@option.Value">@option.Text</MudSelectItem>
                        }
                    </MudSelect>
                    break;
                case InputTypes.Hidden:
                    <MudTextField @bind-Value="@input.Value" Label="@input.Label" Variant="Variant.Outlined" Disabled="true" />
                    break;
            }

            if (Inputs.Last() != input)
            {
                <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            }
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Abbrechen</MudButton>
        <MudButton Color="Color.Primary" OnClick="Ok">@SubmitButtonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public string? Description { get; set; }
    [Parameter] public string? SubmitButtonText { get; set; }
    [Parameter] public List<InputModel>? Inputs { get; set; }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
    
    private void Ok()
    {
        MudDialog.Close(DialogResult.Ok(Inputs));
    }
}