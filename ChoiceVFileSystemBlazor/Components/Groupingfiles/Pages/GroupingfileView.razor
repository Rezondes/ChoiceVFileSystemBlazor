@page "/groupingfiles/view/{id}"

@code {
    public const string Url = "/groupingfiles/view/";
    public static string GetRedirectUrl(string id) => Url + id;
}

@if (!_isAuthorized)
{
    <PageLoading/>
}
else
{
    <FileView @ref="_fileView" Id="@Id"/>
}

@code {
    [CascadingParameter] public UserAccessService UserAccessService { get; set; }
    [Parameter] public string Id { get; set; }
    
    private bool _isAuthorized;
    private bool _shouldRedirect;

    private FileView _fileView;
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _isAuthorized = await UserAccessService.HasRightAsync(PageRightRegistry.GetNeededRankForPage(Url));
        _shouldRedirect = !_isAuthorized;
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        if (_shouldRedirect)
        {
            Navigation.NavigateToNotAuthorized();
            return;
        }
            
        await _fileView.StartAsync();
    }
}